import org.yaml.snakeyaml.Yaml

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def readPubspecVersion = { ->
    def pubspec = new Yaml().load(file("../../pubspec.yaml").text)
    return pubspec.version
}

def readManifestVersion = { ->
    def manifest = new XmlSlurper().parse(file("src/main/AndroidManifest.xml"))
    return manifest.@"android:versionName".text()
}

def readManifestVersionCode = { ->
    def manifest = new XmlSlurper().parse(file("src/main/AndroidManifest.xml"))
    return manifest.@"android:versionCode".text().toInteger()
}

def validateVersion = { ->
    def pubspecVersion = readPubspecVersion()
    def manifestVersion = readManifestVersion()

    project.logger.lifecycle("Checking version name and code...")
    project.logger.lifecycle("pubspecVersion = $pubspecVersion")
    project.logger.lifecycle("manifestVersion = $manifestVersion")

    if (pubspecVersion != manifestVersion) {
        throw new GradleException(
            "Mismatched versions in pubspec.yaml and AndroidManifest.xml:"+
                "\n  pubspecVersion = $pubspecVersion"+
                "\n  manifestVersion = $manifestVersion")
    }
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"

android {
    namespace = "org.rocstreaming.rocdroid"

    compileSdk = project.compileSdkVersion.toInteger()
    ndkVersion = flutter.ndkVersion

    defaultConfig {
        applicationId = "org.rocstreaming.rocdroid"

        targetSdkVersion = project.targetSdkVersion.toInteger()
        minSdkVersion = project.minSdkVersion.toInteger()

        versionName readManifestVersion()
        versionCode readManifestVersionCode()
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            if (System.getenv("SIGNING_STORE_FILE") != null) {
                storeFile file(System.getenv("SIGNING_STORE_FILE"))
                storePassword System.getenv("SIGNING_STORE_PASSWORD")
                keyAlias System.getenv("SIGNING_KEY_ALIAS")
                keyPassword System.getenv("SIGNING_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")

            if (System.getenv("SIGNING_STORE_FILE") != null) {
                signingConfig signingConfigs.release
            }
        }
    }

    // https://android.izzysoft.de/articles/named/iod-scan-apkchecks#blobs
    // https://gist.github.com/obfusk/31c332b884464cd8aa06ce1ba1583c05
    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
}

flutter {
    source = "../.."
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // androidx
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.activity:activity-ktx:1.9.2"
    implementation "androidx.fragment:fragment-ktx:1.8.4"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.viewpager2:viewpager2:1.1.0"
    // flutter
    implementation "com.google.android.material:material:1.3.0"
    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.25"
    // roc
    implementation "org.roc-streaming.roctoolkit:roc-android:0.2.1"
}

task validateVersionTask {
    doLast {
        validateVersion()
    }
}

tasks.matching { it.name.startsWith("assemble") }.configureEach {
    dependsOn validateVersionTask
}
