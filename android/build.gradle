buildscript {
    ext {
        // Compatibility tables:
        //   https://docs.gradle.org/current/userguide/compatibility.html
        //   https://developer.android.com/build/releases/gradle-plugin
        //   https://kotlinlang.org/docs/gradle-configure-project.html
        //
        // Related packages (must be updated together):
        //   org.jetbrains.kotlin:kotlin-gradle-plugin (build.gradle)
        //   com.android.tools.build:gradle (build.gradle)
        //   com.android.application (settings.gradle)
        //   org.jetbrains.kotlin.android (settings.gradle)
        //   kotlinCompilerExtensionVersion (app/build.gradle)
        //   org.jetbrains.kotlin:kotlin-stdlib (app/build.gradle)
        //   androidx.*-ktx (app/build.gradle)
        //
        // Gradle version is defined here:
        //   gradle/wrapper/gradle-wrapper.properties => distributionUrl
        kotlin_version = "1.8.0"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:8.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.yaml:snakeyaml:2.2"
    }
}

plugins {
    id "com.diffplug.spotless" version "6.12.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = "../build"
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(":app")
}
subprojects {
    beforeEvaluate { project ->
        if (project.name == "flutter_localization") {
            project.buildscript.dependencies.classpath \
                "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        }
    }
}

spotless {
    format "misc", {
        target "**/*.gradle", "**/*.xml"
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    kotlin {
        target "**/*.kt"
        targetExclude "**/*.g.kt"
        ktlint()
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
}
